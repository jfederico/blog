env:
  RUBY_VERSION: 2.7.2

name: Rails CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  job_test:
    name: Rubocop + Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Ruby ${{ env.RUBY_VERSION }}
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: Bundle cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 10.13.0

      - uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install

      - name: Install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run Rubocop
        run: bundle exec rubocop

      - name: Setup database
        run:  |
          RAILS_ENV=test bundler exec rails db:create
          RAILS_ENV=test bundler exec rails db:migrate

      - name: Webpack compilation
        run: NODE_ENV=test bundle exec rails webpacker:compile

      - name: Run Test
        run: RAILS_ENV=test bundler exec rails test

  job_build:
    name: Docker build
    runs-on: ubuntu-latest
    needs: job_test
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set outputs
        id: vars
        run: |
          echo ::set-output name=ref_short::${GITHUB_REF#refs/*/}
          echo ::set-output name=sha_short::$(git rev-parse --short HEAD)
      -
        name: Test environment variables
        run: export
        env:
          BUILD_NUMBER: "${{ steps.vars.outputs.ref_short }}-${{ steps.vars.outputs.sha_short }}"
          DOCKER_REPOSITORY: ${{ github.repository }}
          DOCKER_TAG: ${{ steps.vars.outputs.ref_short }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: "${{ github.repository }}:${{ steps.vars.outputs.ref_short }}"
      #     tags: repo/app:latest
      #     build-args: |
      #       BUILD_NUMBER="${{ steps.vars.outputs.ref_short }}-${{ steps.vars.outputs.sha_short }}"
      #       arg2=value2
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
